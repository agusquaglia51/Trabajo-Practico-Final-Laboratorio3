package app;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;
import java.util.jar.JarException;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import Excepciones.CursoIncorrectException;
import Excepciones.PasswordIncorrectException;
import modelado.ListaEmpleados;
import modelado.Profesor;
import modelado.Administrativo;
import modelado.Alumno;
import modelado.Colegio;
import modelado.Empleado;
import modelado.HashMapAlumnos;
import modelado.JsonUtiles;



public class Main {
	
	static Scanner scan;

	public static void main(String[] args) {
		
		scan = new Scanner(System.in);
		
		Colegio SanAgustin = new Colegio();
		
		/*
		
		Profesor profe1 = new Profesor(70000,"MEDIFE","23514645","00123300","Matematica",1);
		
		Profesor profe2 = new Profesor(8000,"OAM","23514645","00124300","Fisica",4);
		
		Profesor profe3 = new Profesor(8000,"OAM","23514645","00124300","Fisica",4);
		
		Profesor profe4 = new Profesor("Agustin", "Quagliarella", "39826712", "Argentino", "CORRIENTES 2210", 70000, "OSDE", "123456", "00124500", "Biologia", 7);
		
		Profesor profe5 = new Profesor("Agustin", "Quagliarella", "39826712", "Argentino", "CORRIENTES 2210", 70000, "OSDE", "123456", "00124500", "Biologia", 7);

		
		Profesor profe6 = new Profesor("Agustin", "Quagliarella", "39826712", "Argentino", "CORRIENTES 2210", 70000, "OSDE", "123456", "00124500", "Biologia", 7);

		
		Profesor profe7 = new Profesor("Agustin", "Quagliarella", "39826712", "Argentino", "CORRIENTES 2210", 70000, "OSDE", "123456", "00124500", "Biologia", 7);

		
		Profesor profe8 = new Profesor("Agustin", "Quagliarella", "39826712", "Argentino", "CORRIENTES 2210", 70000, "OSDE", "123456", "00124500", "Biologia", 7);

		*/
		
		
		
		
		
		Menu(SanAgustin);
		
		
		
	}
	
	
	

	
	
	
	
	public static String devolverJSON(Colegio colegio){
		
		String jsonToString = "";
		
		JsonUtiles jsonArchivo = new JsonUtiles();
		
		try {
			
			JSONObject unColegio = new JSONObject();
			
			JSONArray misProfesores = new JSONArray();
			
			JSONArray misAdministrativos = new JSONArray();
			
			
			unColegio.put("Nombre del Colegio", colegio.getNombre());
			
			
			int i = 0;
			
			while(i < colegio.getListaE().cantidadEmpleados()){
				
				if(colegio.getListaE().getEmpleado(i) instanceof Profesor) {
					
					Profesor aux = (Profesor) colegio.getListaE().getEmpleado(i);
					
					JSONObject unProfesor = new JSONObject();
					
					unProfesor.put("Nombre", aux.getNombre());
					unProfesor.put("Apellido", aux.getApellido());
					unProfesor.put("Sueldo", aux.getSueldo());
					unProfesor.put("ObraSocial", aux.getObraSocial());
					unProfesor.put("Telefono", aux.getTelefono());
					unProfesor.put("NroAsociado", aux.getNroAsociado());
					unProfesor.put("Materia", aux.getMateriaQueEnsenia());
					unProfesor.put("CursosAcargo", aux.getCantidadDeCursos());
					
					misProfesores.put(unProfesor);
					
				}else {
					
					Administrativo aux = (Administrativo) colegio.getListaE().getEmpleado(i);
					
					JSONObject unAdministrativo = new JSONObject();
					
					unAdministrativo.put("Nombre", aux.getNombre());
					unAdministrativo.put("Apellido", aux.getApellido());
					unAdministrativo.put("DNI ", aux.getDNI());
					unAdministrativo.put("Sueldo", aux.getSueldo());
					unAdministrativo.put("ObraSocial", aux.getObraSocial());
					unAdministrativo.put("Telefono", aux.getTelefono());
					unAdministrativo.put("NroAsociado", aux.getNroAsociado());
					unAdministrativo.put("Materia", aux.getDepartamentoDeTrabajo());
					
					misAdministrativos.put(unAdministrativo);
				}
				
				
				i++;
			}
			
			
			
			
			unColegio.put("Profesores", misProfesores);
			unColegio.put("Administrativos", misAdministrativos);
			
			jsonArchivo.grabar(unColegio);

		
			
			jsonToString = unColegio.toString();
	            
		} catch (JSONException e) {
			e.printStackTrace();
		}
		
		return jsonToString;
	}
	
	
	
	
	
	
	
	
	
	public static boolean superLogin(String usuario, String contraseña)  {
		boolean flag = false;
		
        try {
            flag = login(usuario,contraseña);
        } 
        catch (NullPointerException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        
        return flag;
    }
	
	public static boolean login(String usuario, String contraseña) throws PasswordIncorrectException,NullPointerException {
		boolean flag = false;
		
        if(usuario == null || contraseña == null) {
            throw new NullPointerException("nfldmlk");
        }
        
        if(usuario.isEmpty() || contraseña.isEmpty()) {
            throw new PasswordIncorrectException("password incorrect",contraseña);
        }
        
        if((usuario.compareTo("admin") == 0) && (contraseña.compareTo("admin") == 0)) {
        	flag = true;
        	System.out.println("BIENVENIDO !!!");
        }else {
        	System.out.println("El usuario o la contraseña son incorrectos");
        }
        
        return flag;
    }
	
	
	public static void Menu(Colegio SanAgustin) throws CursoIncorrectException {
		
		
		
		String usuario;
		String contra;
		int opc1, opc2, anio, legajo;
		String curso = "";
		
		
		Scanner scan = new Scanner(System.in);
		
		
		
		Profesor profe1 = new Profesor("Agustin", "Quagliarella", "39826712", 70000, "OSDE", "123456", "00124500", "Biologia", 7);

		Alumno alumno1 = new Alumno("Jose", "Garcia", "38265333", 123456789, "2235135789", 5, "B",10);
		
		Administrativo administrativo1 = new Administrativo(500000,"OSDE","223545545","001989800","gestion contable");
		
		
		do {
			System.out.println("Usuario: ");
			usuario = scan.next();
			System.out.println("contraseña: ");
			contra = scan.next();
		}while(superLogin(usuario,contra) == false);
		
		
		do {
		
			System.out.println("\n   ///// MENU /////   \n");
			
			System.out.println("1. Administrar empleados \n");
			System.out.println("2. Administrar alumnos \n");
			System.out.println("3. Mostrar json por pantalla y cargarlo a un archivo \n");
			System.out.println("4. Salir \n");
			
			System.out.println("Digite la opcion que desea realizar: \n");
			opc1 = scan.nextInt();
			
			switch(opc1) {
				case 1:
					
					do {
						System.out.println("\n   ///// MENU /////   \n");
						
						System.out.println("1. Agregar un empleado a la lista \n");
						System.out.println("2. Quitar un empelado de la lista \n");
						System.out.println("3. Ver la cantidad de profesores \n");
						System.out.println("4. Ver la cantidad de administrativos \n");
						System.out.println("5. Imprimir listado de profesores \n");
						System.out.println("6. Imprimir listado de administrativos \n");
						System.out.println("7. Buscar un empleado \n");
						System.out.println("8. Salir \n");
						
						System.out.println("Digite la opcion que desea realizar: \n");
						opc2 = scan.nextInt();
						
						
						switch(opc2) {
							case 1:
								String control1 = "s";
								while(control1 == "s") {
									
									SanAgustin.getListaE().agregarEmpleado(profe1);
									SanAgustin.getListaE().agregarEmpleado(administrativo1);
									
									System.out.println("Se agrego un empleado correctamente \n");
									System.out.println("Desea agregar otro? s/n: ");
									
									control1 = scan.next();
								}
								break;
								
							case 2:
								String control2 = "s";
								while(control2 == "s") {
									SanAgustin.getListaE().eliminarEmpelado(profe1);
									System.out.println("Se eliminar un empleado correctamente \n");
									System.out.println("Desea eliminar otro? s/n: ");
									control2 = scan.next();
								}
								break;
								
							case 3:
								System.out.println("La cantidad de profesores es de :" + SanAgustin.getListaE().contarProfesores() +"\n");
								break;
								
							case 4:
								System.out.println("La cantiada de administrativos es de: "+ SanAgustin.getListaE().contarAdministrativos()+"\n");
								break;
								
							case 5:
								System.out.println(SanAgustin.getListaE().listadoProfesores());
								break;
								
							case 6:
								System.out.println(SanAgustin.getListaE().listadoAdministrativos());
								break;
								
							case 7:
								String control3 = "s";
								while(control3 == "s") {
									System.out.println("El empleado se encuentra en la lista: " + SanAgustin.getListaE().buscarEmpleado(profe1));
									System.out.println("Desea buscar otro? s/n: ");
									control3 = scan.next();
								}
								break;
							
							case 8:
								break;
						}
						
					}while(opc2 != 8);
					break;
					
				case 2:
					
					do {
						System.out.println("\n   ///// MENU /////   \n");
						
						System.out.println("1. Agregar un alumno a la lista \n");
						System.out.println("2. Quitar un  alumno de la lista \n");
						System.out.println("3. Ver la cantidad de alumnos \n");
						System.out.println("4. Imprimir listado de alumnos \n");
						System.out.println("5. Limpiar lista de alumnos \n");
						System.out.println("6. Crear comisiones \n");
						System.out.println("7. Mostrar comision");
						System.out.println("8. Actualizar condicion de alumnos (si tienen mas de 15 faltas pasan a ser no regular) ");
						System.out.println("9. Cambiar alumno de turno ");

						System.out.println("10. Salir\n");
						
						System.out.println("Digite la opcion que desea realizar: ");
						opc2 = scan.nextInt();
					
					}while(opc2 != 10);
					
					switch(opc2) {
					
						case 1:
							SanAgustin.getListaA().agregar(alumno1);
							System.out.println("Se agrego un alumno correctamente \n");
							break;
						
						case 2:
							
							SanAgustin.getListaA().quitar(alumno1);
							System.out.println("Se quito un alumno correctamente \n");
	
							break;
							
						case 3:
							System.out.println("La cantidad de alumnos es de : "+SanAgustin.getListaA().contar()+"\n");
							break;
							
						case 4:
							System.out.println(SanAgustin.getListaA().listado());
							break;
							
						case 5:
							SanAgustin.getListaA().limpiarMapa();
							System.out.println("La lista se ha limpiado con exito! \n");
							break;
							
						case 6:
							SanAgustin.CrearCursos();
							System.out.println("Se han creado las comisiones! \n");
							break;
							
						case 7:
							System.out.println("Digite el anio que desea imprimir por pantalla: ");
							anio = scan.nextInt();
							
							switch(anio) {
								case 1:
									System.out.println("Digite el turno que desea ver, pulse 'A' para ver el turno mañana o 'B' para ver el turno tarde: ");
									curso = scan.nextLine();
									if(curso == "A") {
										System.out.println(SanAgustin.getComision1roA().listado());
									}else {
										System.out.println(SanAgustin.getComision1roB().listado());
									}
									break;
								case 2:
									System.out.println("Digite el turno que desea ver, pulse 'A' para ver el turno mañana o 'B' para ver el turno tarde: ");
									curso = scan.nextLine();
									if(curso == "A") {
										System.out.println(SanAgustin.getComision2doA().listado());
									}else {
										System.out.println(SanAgustin.getComision2doB().listado());
									}
									break;
								case 3:
									System.out.println("Digite el turno que desea ver, pulse 'A' para ver el turno mañana o 'B' para ver el turno tarde: ");
									curso = scan.nextLine();
									if(curso == "A") {
										System.out.println(SanAgustin.getComision3roA().listado());
									}else {
										System.out.println(SanAgustin.getComision3roB().listado());
									}
									break;
								case 4:
									System.out.println("Digite el turno que desea ver, pulse 'A' para ver el turno mañana o 'B' para ver el turno tarde: ");
									curso = scan.nextLine();
									if(curso == "A") {
										System.out.println(SanAgustin.getComision4toA().listado());
									}else {
										System.out.println(SanAgustin.getComision4toB().listado());
									}
									break;
								case 5:
									System.out.println("Digite el turno que desea ver, pulse 'A' para ver el turno mañana o 'B' para ver el turno tarde: ");
									curso = scan.nextLine();
									if(curso == "A") {
										System.out.println(SanAgustin.getComision5toA().listado());
									}else {
										System.out.println(SanAgustin.getComision5toB().listado());
									}
									break;
								case 6:
									System.out.println("Digite el turno que desea ver, pulse 'A' para ver el turno mañana o 'B' para ver el turno tarde: ");
									curso = scan.nextLine();
									if(curso == "A") {
										System.out.println(SanAgustin.getComision6toA().listado());
									}else {
										System.out.println(SanAgustin.getComision6toB().listado());
									}
									break;
							}
							break;
						case 8:
							SanAgustin.ActualizarCondicionDeAlumnos(SanAgustin.getListaA());
							System.out.println("Se actualizo correctamente la condicion de la lista de alumnos");
							break;
							
						case 9:
							
							System.out.println("Digite el legajo del alumno: ");
							legajo = scan.nextInt();
							
							
							System.out.println("Digite la comision a la que desea cambiarse \n");
							System.out.println("Pulse 'A' para cambiarse a la comision A: \n");
							System.out.println("Pulse 'B' para cambiarse a la comision B: \n");
							curso = scan.next();
							SanAgustin.CambiarAlumnoDeTurno(legajo,curso);
							
					}
				case 3:
					String aux = devolverJSON(SanAgustin);
					System.out.println(aux); 
					break;
					
					
					
			}
			
		}while(opc1 != 4);
		System.out.println("El programa ha finalizado");
		
		
	}
	
	

}
